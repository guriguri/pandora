/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package pandora.domain.avro;  
@SuppressWarnings("all")
public class PandoraList extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PandoraList\",\"namespace\":\"pandora.domain.avro\",\"fields\":[{\"name\":\"recordList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PandoraRecord\",\"fields\":[{\"name\":\"stringData\",\"type\":\"string\",\"default\":null},{\"name\":\"byteData\",\"type\":\"bytes\"},{\"name\":\"intData\",\"type\":\"int\"},{\"name\":\"longData\",\"type\":\"long\"},{\"name\":\"floatData\",\"type\":\"float\"},{\"name\":\"doubleData\",\"type\":\"double\"},{\"name\":\"booleanData\",\"type\":\"boolean\",\"default\":true}]}}},{\"name\":\"stringList\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"pandoraEnum\",\"type\":{\"type\":\"enum\",\"name\":\"PandoraEnum\",\"symbols\":[\"FIRST\",\"SECOND\",\"THIRD\"]}}]}");
  @Deprecated public java.util.List<pandora.domain.avro.PandoraRecord> recordList;
  @Deprecated public java.util.List<java.lang.CharSequence> stringList;
  @Deprecated public pandora.domain.avro.PandoraEnum pandoraEnum;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return recordList;
    case 1: return stringList;
    case 2: return pandoraEnum;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: recordList = (java.util.List<pandora.domain.avro.PandoraRecord>)value$; break;
    case 1: stringList = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: pandoraEnum = (pandora.domain.avro.PandoraEnum)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'recordList' field.
   */
  public java.util.List<pandora.domain.avro.PandoraRecord> getRecordList() {
    return recordList;
  }

  /**
   * Sets the value of the 'recordList' field.
   * @param value the value to set.
   */
  public void setRecordList(java.util.List<pandora.domain.avro.PandoraRecord> value) {
    this.recordList = value;
  }

  /**
   * Gets the value of the 'stringList' field.
   */
  public java.util.List<java.lang.CharSequence> getStringList() {
    return stringList;
  }

  /**
   * Sets the value of the 'stringList' field.
   * @param value the value to set.
   */
  public void setStringList(java.util.List<java.lang.CharSequence> value) {
    this.stringList = value;
  }

  /**
   * Gets the value of the 'pandoraEnum' field.
   */
  public pandora.domain.avro.PandoraEnum getPandoraEnum() {
    return pandoraEnum;
  }

  /**
   * Sets the value of the 'pandoraEnum' field.
   * @param value the value to set.
   */
  public void setPandoraEnum(pandora.domain.avro.PandoraEnum value) {
    this.pandoraEnum = value;
  }

  /** Creates a new PandoraList RecordBuilder */
  public static pandora.domain.avro.PandoraList.Builder newBuilder() {
    return new pandora.domain.avro.PandoraList.Builder();
  }
  
  /** Creates a new PandoraList RecordBuilder by copying an existing Builder */
  public static pandora.domain.avro.PandoraList.Builder newBuilder(pandora.domain.avro.PandoraList.Builder other) {
    return new pandora.domain.avro.PandoraList.Builder(other);
  }
  
  /** Creates a new PandoraList RecordBuilder by copying an existing PandoraList instance */
  public static pandora.domain.avro.PandoraList.Builder newBuilder(pandora.domain.avro.PandoraList other) {
    return new pandora.domain.avro.PandoraList.Builder(other);
  }
  
  /**
   * RecordBuilder for PandoraList instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PandoraList>
    implements org.apache.avro.data.RecordBuilder<PandoraList> {

    private java.util.List<pandora.domain.avro.PandoraRecord> recordList;
    private java.util.List<java.lang.CharSequence> stringList;
    private pandora.domain.avro.PandoraEnum pandoraEnum;

    /** Creates a new Builder */
    private Builder() {
      super(pandora.domain.avro.PandoraList.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(pandora.domain.avro.PandoraList.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing PandoraList instance */
    private Builder(pandora.domain.avro.PandoraList other) {
            super(pandora.domain.avro.PandoraList.SCHEMA$);
      if (isValidValue(fields()[0], other.recordList)) {
        this.recordList = (java.util.List<pandora.domain.avro.PandoraRecord>) data().deepCopy(fields()[0].schema(), other.recordList);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stringList)) {
        this.stringList = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[1].schema(), other.stringList);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pandoraEnum)) {
        this.pandoraEnum = (pandora.domain.avro.PandoraEnum) data().deepCopy(fields()[2].schema(), other.pandoraEnum);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'recordList' field */
    public java.util.List<pandora.domain.avro.PandoraRecord> getRecordList() {
      return recordList;
    }
    
    /** Sets the value of the 'recordList' field */
    public pandora.domain.avro.PandoraList.Builder setRecordList(java.util.List<pandora.domain.avro.PandoraRecord> value) {
      validate(fields()[0], value);
      this.recordList = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'recordList' field has been set */
    public boolean hasRecordList() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'recordList' field */
    public pandora.domain.avro.PandoraList.Builder clearRecordList() {
      recordList = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'stringList' field */
    public java.util.List<java.lang.CharSequence> getStringList() {
      return stringList;
    }
    
    /** Sets the value of the 'stringList' field */
    public pandora.domain.avro.PandoraList.Builder setStringList(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.stringList = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'stringList' field has been set */
    public boolean hasStringList() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'stringList' field */
    public pandora.domain.avro.PandoraList.Builder clearStringList() {
      stringList = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'pandoraEnum' field */
    public pandora.domain.avro.PandoraEnum getPandoraEnum() {
      return pandoraEnum;
    }
    
    /** Sets the value of the 'pandoraEnum' field */
    public pandora.domain.avro.PandoraList.Builder setPandoraEnum(pandora.domain.avro.PandoraEnum value) {
      validate(fields()[2], value);
      this.pandoraEnum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'pandoraEnum' field has been set */
    public boolean hasPandoraEnum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'pandoraEnum' field */
    public pandora.domain.avro.PandoraList.Builder clearPandoraEnum() {
      pandoraEnum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public PandoraList build() {
      try {
        PandoraList record = new PandoraList();
        record.recordList = fieldSetFlags()[0] ? this.recordList : (java.util.List<pandora.domain.avro.PandoraRecord>) defaultValue(fields()[0]);
        record.stringList = fieldSetFlags()[1] ? this.stringList : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.pandoraEnum = fieldSetFlags()[2] ? this.pandoraEnum : (pandora.domain.avro.PandoraEnum) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
